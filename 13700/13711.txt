LCS 4
-----------------------------------------------------------------

#include <iostream>
#include <vector>
#include <algorithm>

int main()
{
	int N;
	scanf("%d", &N);
	std::vector<int> v1, LIS, dp;

	int x;
	for (int i = 0;i < N;i++)
	{
		scanf("%d", &x);
		v1.push_back(x);
	}
	
	std::vector<int>::iterator iter;
	for (int i = 0;i < N;i++)
	{
		scanf("%d", &x);
		iter= std::find(v1.begin(), v1.end(), x);
		LIS.push_back(iter - v1.begin());
	}
	v1.clear();

	dp.push_back(-1);
	for (int i = 0;i < N;i++)
	{
		if (dp.back() < LIS[i])
			dp.push_back(LIS[i]);
		else
		{
			iter = std::lower_bound(dp.begin(), dp.end(), LIS[i]);
			*iter = LIS[i];
		}
	}
	
	printf("%d", dp.size() - 1);

	return 0;
}